scale_color_manual(name = "Food web type", labels = c("ADBM" = "ADBM food web with maximum TSS", "Empirical" = "Observed food web"),
values = c("ADBM" = "red", "Empirical" = "blue")) +
theme(legend.position="bottom", legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) +
theme(text = element_text(size = 16)) +
scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c(0, 0.25, 0.5, 0.75, 1))
# ggsave(plot = plot_dd_mc_mod, filename = "results/plot_mostconnected_maxTSS.png", width = 13, height = 6)
ggsave(plot = plot_dd_mc_mod, filename = "results/plot_mostconnected_maxTSS.png", width = 13, height = 6)
# 2022.08.30
# Plot multiple cumulative secondary extinctions for random extinction scenario for independent simulations
library(dplyr)
library(ggplot2)
dd_rand_raw <- readRDS("results/random_raw_uncertainty_maxTSS.RDS")
dd_rand_mod <- dd_rand_raw %>%
mutate(acc_pri_ext_by_S = n_ext/S, acc_sec_ext_by_S = acc_sec_ext/S)
fw_labs <- c("Benguela Pelagic" = "(a) Benguela Pelagic", "Broadstone Stream" = "(b) Broadstone Stream \n(taxonomic aggregation)",
"Broadstone Stream size_agg" = "(c) Broadstone Stream \n(size aggregation)",
"Broom" = "(d) Broom", "Capinteria" = "(e) Capinteria", "Caricaie Lakes" = "(f) Caricaie Lakes",
"Grasslands" = "(g) Grasslands", "Mill Stream" = "(h) Mill Stream",
"Skipwith Pond" = "(i) Skipwith Pond", "Small Reef" = "(j) Small Reef", "Tuesday Lake" = "(k) Tuesday Lake",
"Ythan" = "(l) Ythan")
plot_ra_ext_lines <- dd_rand_mod %>%
filter(nsim_rand %in% c(36:40)) %>%
ggplot() +
geom_point(aes(x = acc_pri_ext_by_S, y = acc_sec_ext_by_S, color = type, color = as.factor(nsim_rand))) +
geom_line(aes(x = acc_pri_ext_by_S, y = acc_sec_ext_by_S, color = type, color = as.factor(nsim_rand))) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs), nrow = 2) +
theme_classic() +
xlab("Species removed/S") +
ylab("Cumulative secondary extinctions/S") +
# scale_color_manual(name = "Food web type", labels = c("ADBM" = "ADBM food web", "Empirical" = "Observed food web"),
#                    values = c("ADBM" = "red", "Empirical" = "blue")) +
scale_shape_discrete(name = "Type") +
scale_linetype_discrete(name = "Type") +
scale_color_manual(name = "Food web type", labels = c("ADBM_ABC" = "ADBM food web with maximum TSS", "Empirical" = "Observed food web"),
values = c("ADBM_ABC" = "red", "Empirical" = "blue")) +
theme(legend.position="bottom", legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) +
theme(text = element_text(size = 16)) +
scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c(0, 0.25, 0.5, 0.75, 1))
# ggsave(plot = plot_ra_ext_lines, filename = "results//plot_ra_extlines_maxTSS.png", width = 13, height = 6)
ggsave(plot = plot_ra_ext_lines, filename = "results//plot_ra_extlines_maxTSS.png", width = 13, height = 6)
#### Least connected faceted ####
plot_R50_lc_facet <- rob_both_lc %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name), alpha = 1, width = 0.019, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs_facet)) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_lc_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
# ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
# xlab("") +
ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("Least connected") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggpubr)
library(latex2exp)
library(HDInterval)
fw_labs <- c("Benguela Pelagic" = "Benguela Pelagic", "Broadstone Stream" = "Broadstone Stream (taxonomic aggregation)",
"Broom" = "Broom", "Capinteria" = "Capinteria", "Caricaie Lakes" = "Caricaie Lakes",
"Grasslands" = "Grasslands", "Mill Stream" = "Mill Stream",
"Skipwith Pond" = "Skipwith Pond", "Small Reef" = "Small Reef", "Tuesday Lake" = "Tuesday Lake",
"Ythan" = "Ythan", "Broadstone Stream size_agg" = "Broadstone Stream (size aggregation)")
fw_labs_facet <- c("Benguela Pelagic" = "Benguela Pelagic", "Broadstone Stream" = "Broadstone Stream \n (taxonomic aggregation)",
"Broom" = "Broom", "Capinteria" = "Capinteria", "Caricaie Lakes" = "Caricaie Lakes",
"Grasslands" = "Grasslands", "Mill Stream" = "Mill Stream",
"Skipwith Pond" = "Skipwith Pond", "Small Reef" = "Small Reef", "Tuesday Lake" = "Tuesday Lake",
"Ythan" = "Ythan", "Broadstone Stream size_agg" = "Broadstone Stream \n (size aggregation)")
#### Random extinction scenario ####
rob_all <- readRDS("results/robustness_R50_random_uncertainty_1000.RDS")
#### Observed food webs
rob_all_emp <- rob_all %>%
filter(type == "Empirical") %>%
group_by(fw_name, type, nsim_fw, connectance) %>%
summarise(rob_med_fw = median(robustness))
rob_all_emp <- data.frame(rob_all_emp)
rob_all_emp <- rob_all_emp %>%
mutate(robustness_emp = rob_med_fw) %>%
select(-c(type, rob_med_fw))
#### ADBM predicted food webs
rob_all_ADBM <- rob_all %>%
filter(type == "ADBM_ABC") %>%
group_by(fw_name, type, nsim_fw, connectance) %>%
summarise(rob_med_fw = median(robustness))
rob_all_ADBM <- rob_all_ADBM %>%
group_by(fw_name, type) %>%
summarise(connectance = connectance, nsim_fw = nsim_fw, rob_med_fw = rob_med_fw,
l_conn = as.numeric(hdi(connectance)[1]), u_conn = as.numeric(hdi(connectance)[2])) %>%
filter(connectance >= l_conn & connectance <= u_conn) %>%
select(-c(l_conn, u_conn))
rob_all_ADBM <- data.frame(rob_all_ADBM)
rob_all_ADBM <- rob_all_ADBM %>%
mutate(robustness_ADBM = rob_med_fw) %>%
select(-c(type, rob_med_fw))
rob_both <- merge(x = rob_all_emp, rob_all_ADBM, by = c("fw_name")) %>%
mutate(nsim_fw = nsim_fw.y) %>%
select(-c(nsim_fw.x, nsim_fw.y, connectance.x, connectance.y))
rob_both_median <- rob_both %>%
group_by(fw_name, robustness_emp) %>%
summarise(median_robustness_ADBM = median(robustness_ADBM))
#### Graph
plot_R50_ra <- rob_both %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name, fill = fw_name), alpha = 0.5, width = 0.01, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
# ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("(b) Random") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
rob_all_raw_mc <- readRDS("results/robustness_R50_mostconnected_uncertainty.RDS")
## Observed food web
rob_all_mc_emp <- rob_all_raw_mc %>%
filter(type == "Empirical") %>%
mutate(robustness_emp = robustness)
rob_all_mc_emp <- data.frame(rob_all_mc_emp)
rob_all_mc_emp <- rob_all_mc_emp %>%
select(-c(type, S, robustness))
#### ADBM predicted food webs
rob_all_mc_ADBM <- rob_all_raw_mc %>%
filter(type == "ADBM_ABC") %>%
mutate(robustness_ADBM = robustness)
rob_all_mc_ADBM <- data.frame(rob_all_mc_ADBM)
rob_all_mc_ADBM <- rob_all_mc_ADBM %>%
select(-c(type, S, robustness))
rob_all_mc_ADBM <- rob_all_mc_ADBM %>%
group_by(fw_name) %>%
summarise(connectance = connectance, nsim_fw = nsim_fw, robustness_ADBM = robustness_ADBM,
l_conn = as.numeric(hdi(connectance)[1]), u_conn = as.numeric(hdi(connectance)[2])) %>%
filter(connectance >= l_conn & connectance <= u_conn) %>%
select(-c(l_conn, u_conn))
rob_all_mc_ADBM <- data.frame(rob_all_mc_ADBM)
rob_both_mc <- merge(x = rob_all_mc_emp, rob_all_mc_ADBM, by = c("fw_name")) %>%
mutate(nsim_fw = nsim_fw.y) %>%
select(-c(nsim_fw.x, nsim_fw.y, connectance.x, connectance.y))
rob_both_mc_median <- rob_both_mc %>%
group_by(fw_name, robustness_emp) %>%
summarise(median_robustness_ADBM = median(robustness_ADBM))
#### Graph
plot_R50_mc <- rob_both_mc %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name, fill = fw_name), alpha = 0.5, width = 0.01, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_mc_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
xlab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("(a) Most connected") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
rob_all_raw_lc <- readRDS("results/robustness_R50_leastconnected_uncertainty.RDS")
## Observed food web
rob_all_lc_emp <- rob_all_raw_lc %>%
filter(type == "Empirical") %>%
mutate(robustness_emp = robustness)
rob_all_lc_emp <- data.frame(rob_all_lc_emp)
rob_all_lc_emp <- rob_all_lc_emp %>%
select(-c(type, S, robustness))
#### ADBM predicted food webs
rob_all_lc_ADBM <- rob_all_raw_lc %>%
filter(type == "ADBM_ABC") %>%
mutate(robustness_ADBM = robustness)
rob_all_lc_ADBM <- data.frame(rob_all_lc_ADBM)
rob_all_lc_ADBM <- rob_all_lc_ADBM %>%
select(-c(type, S, robustness))
rob_all_lc_ADBM <- rob_all_lc_ADBM %>%
group_by(fw_name) %>%
summarise(connectance = connectance, nsim_fw = nsim_fw, robustness_ADBM = robustness_ADBM,
l_conn = as.numeric(hdi(connectance)[1]), u_conn = as.numeric(hdi(connectance)[2])) %>%
filter(connectance >= l_conn & connectance <= u_conn) %>%
select(-c(l_conn, u_conn))
rob_all_lc_ADBM <- data.frame(rob_all_lc_ADBM)
rob_both_lc <- merge(x = rob_all_lc_emp, rob_all_lc_ADBM, by = c("fw_name")) %>%
mutate(nsim_fw = nsim_fw.y) %>%
select(-c(nsim_fw.x, nsim_fw.y, connectance.x, connectance.y))
rob_both_lc_median <- rob_both_lc %>%
group_by(fw_name, robustness_emp) %>%
summarise(median_robustness_ADBM = median(robustness_ADBM))
#### Graph
plot_R50_lc <- rob_both_lc %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name, fill = fw_name), alpha = 0.5, width = 0.01, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
# facet_wrap(~fw_name) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_lc_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
# xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
# ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
xlab("") +
ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("(c) Least connected") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
###  Merging all the above plots
plot_R50_all <- ggarrange(plot_R50_mc, plot_R50_ra, plot_R50_lc, nrow = 1, ncol = 3, common.legend = TRUE,
legend = "bottom")
ggsave(plot_R50_all, filename = "results/plot_R50_ADBM_vs_obs.png", width = 15, height = 6, dpi = 500)
#### Least connected faceted ####
plot_R50_lc_facet <- rob_both_lc %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name), alpha = 1, width = 0.019, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs_facet)) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_lc_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
# ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
# xlab("") +
ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("Least connected") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
plot_R50_ra_facet <- rob_both %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name), alpha = 1, width = 0.019, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs_facet)) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
# ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("Random") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
plot_R50_ra_lc_facet <- ggarrange(plot_R50_ra_facet, plot_R50_lc_facet, nrow = 2, ncol = 1, common.legend = TRUE,
legend = "bottom")
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 15, height = 8, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 15, height = 16, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 8, height = 8, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 12, height = 16, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 13, height = 16, dpi = 500)
#### Least connected faceted ####
plot_R50_lc_facet <- rob_both_lc %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name), alpha = 1, width = 0.019, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs_facet)) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_lc_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
# ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
# xlab("") +
ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("Least connected") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
plot_R50_ra_facet <- rob_both %>%
ggplot() +
geom_boxplot(aes(x = robustness_emp, y = robustness_ADBM, color = fw_name), alpha = 1, width = 0.019, outlier.shape = 1,
outlier.alpha = 0.5, outlier.size = 0.3) +
geom_abline(slope = 1, intercept = 0, linetype = 3) +
facet_wrap(~fw_name, labeller = labeller(fw_name = fw_labs_facet)) +
xlim(c(0.0, 0.51)) +
ylim(c(0.0, 0.51)) +
geom_point(data = rob_both_median, aes(x = robustness_emp, y = median_robustness_ADBM, color = fw_name, shape = "Median"),
size = 4) +
# geom_blank(data = dummy, mapping = aes(x = robustness_emp, y = robustness_ADBM)) +
theme_classic() +
xlab(TeX("Robustness ($R_{50}$) of observed food webs")) +
ylab(TeX("Robustness ($R_{50}$) of ADBM food webs")) +
# ylab("") +
scale_fill_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_color_brewer(type = "qual", palette = "Paired", labels = fw_labs, name = "Food web") +
scale_shape_manual(name  = "Summary statistics", labels = c("Median"), values = c(18)) +
ggtitle("Random") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5)) +
theme(text = element_text(size = 15))
plot_R50_ra_lc_facet <- ggarrange(plot_R50_ra_facet, plot_R50_lc_facet, nrow = 2, ncol = 1, common.legend = TRUE,
legend = "bottom")
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 13, height = 16, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 13, height = 18, dpi = 500)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 12, height = 15, dpi = 250)
ggsave(plot_R50_ra_lc_facet, filename = "results/plot_R50_ADBM_vs_obs_ra_lc_facet.png", width = 13, height = 15, dpi = 250)
# 2022.09.19
# Plot Max trophic level of the ADBM predicted food webs vs that of the empirical food webs
library(dplyr)
library(ggplot2)
fw_labs <- c("Benguela Pelagic" = "Benguela Pelagic", "Broadstone Stream" = "Broadstone Stream (taxonomic aggregation)",
"Broom" = "Broom", "Capinteria" = "Capinteria", "Caricaie Lakes" = "Caricaie Lakes",
"Grasslands" = "Grasslands", "Mill Stream" = "Mill Stream",
"Skipwith Pond" = "Skipwith Pond", "Small Reef" = "Small Reef", "Tuesday Lake" = "Tuesday Lake",
"Ythan" = "Ythan", "Broadstone Stream size_agg" = "Broadstone Stream (size aggregation)")
max_tl_emp_df <- readRDS("results/max_tl_emp.RDS")
max_tl_ADBM_df <- readRDS("results/max_tl_ADBM.RDS")
max_tl_df <- merge(max_tl_emp_df, max_tl_ADBM_df, by = "fw_name")
ggplot(max_tl_df) +
geom_boxplot(aes(x = max_tl_emp, y = max_tl_ADBM, color = fw_name), width = 0.1, outlier.size = 0.3) +
xlim(c(0, 10)) +
ylim(c(0, 10)) +
scale_color_brewer(palette = "Paired", labels = fw_labs, name = "Food web") +
geom_abline(slope = 1, intercept = 0) +
xlab("Maximum trophic level in observed food webs") +
ylab("Maximum trophic level in ADBM predicted food webs") +
theme_classic()
plot_max_tl_ADBM_vs_emp <- ggplot(max_tl_df) +
geom_boxplot(aes(x = max_tl_emp, y = max_tl_ADBM, color = fw_name), width = 0.1, outlier.size = 0.3) +
xlim(c(0, 10)) +
ylim(c(0, 10)) +
scale_color_brewer(palette = "Paired", labels = fw_labs, name = "Food web") +
geom_abline(slope = 1, intercept = 0, lintetype = 2) +
xlab("Maximum trophic level in observed food webs") +
ylab("Maximum trophic level in ADBM predicted food webs") +
theme_classic()
plot_max_tl_ADBM_vs_emp <- ggplot(max_tl_df) +
geom_boxplot(aes(x = max_tl_emp, y = max_tl_ADBM, color = fw_name), width = 0.1, outlier.size = 0.3) +
xlim(c(0, 10)) +
ylim(c(0, 10)) +
scale_color_brewer(palette = "Paired", labels = fw_labs, name = "Food web") +
geom_abline(slope = 1, intercept = 0, linetype = 2) +
xlab("Maximum trophic level in observed food webs") +
ylab("Maximum trophic level in ADBM predicted food webs") +
theme_classic()
plot_max_tl_ADBM_vs_em
plot_max_tl_ADBM_vs_emp
ggsave(plot = plot_max_tl_ADBM_vs_emp, filename = "results/plot_max_tl_ADBM_vs_emp.png", width = 8, height = 5)
920856 * 0.8 * 0.5
1501541 * 0.8 * 0.5
880,405 * 0.8*0.5
880405 * 0.8*0.5
240000*4.6*5
240000*4.6*5*2.5
240000*4.6*2.5
300000*4.6*2.5
4.6*(60000 + 120000 + 180000+ 240000+ 300000)
4.6*(60000 + 120000 + 180000+ 240000)
(6.8+3.4+3.4+6.8+6.1)*4
z  <- 5
x <- 2
y <- 4
z  <- 5
mean(x, y, z)
(x + y + z - 3*mean(x, y, z))
(x + y + z - 3*mean(x, y, z))/(abs(x) + abs(y) + abs(z))
x <- 2
y <- 4
z <- 5
x_sc <- x - mean(x, y, z)/(abs(x) + abs(y) + abs(z))
y_sc <- y - mean(x, y, z)/(abs(x) + abs(y) + abs(z))
z_sc <- z - mean(x, y, z)/(abs(x) + abs(y) + abs(z))
sum(x_sc + y_sc + z_sc)
x <- 2
y <- 4
z <- 5
x_sc <- (x - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
y_sc <- (y - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
z_sc <- (z - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
sum(x_sc + y_sc + z_sc)
x <- 0.4
y <- 0.6
z <- 0.1
x_sc <- (x - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
y_sc <- (y - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
z_sc <- (z - mean(x, y, z))/(abs(x) + abs(y) + abs(z))
sum(x_sc + y_sc + z_sc)
max_tl_ADBM_df
max_tl_emp_df
max_tl_df
max_tl_emp_df
plot_max_tl_ADBM_vs_emp
saveRDS(object = plot_max_tl_ADBM_vs_emp, file = "results/plot_max_tl_ADBM_vs_emp.RDS")
rm(list = ls())
fw <- "Benguela Pelagic"
fw <- foodweb
prop_basal_ADBM_all <- c()
library(R.utils)
fw <- foodweb
prop_basal_ADBM_all <- c()
fw
prop_basal_ADBM_all <- c()
library(R.utils)
library(readxl)
library(cheddar)
sourceDirectory("R", modifiedOnly = FALSE)
sourceDirectory("../C1_method_v2/R", modifiedOnly = FALSE)
metadata <- read_excel("~/Google Drive/GitHub/C1_method_v2/data/parameter_values.xlsx")
fw_tol_loc <- metadata$dist_rej[metadata$foodweb == fw]
nsim_loc <- 1
pred_mat <- ADBM_ABC_fw_all(fw_name = fw, fw_tol = fw_tol_loc, nsim = nsim_loc)
pred_mat_ADBM <- pred_mat$ADBM_pred_mat
comm_ADBM <- mat.to.comm(pred.mat = pred_mat_ADBM, fw_title = fw)
FractionBasalNodes(comm_ADBM)
prop_basal_ADBM_fun <- function(foodweb){
fw <- foodweb
prop_basal_ADBM_all <- c()
library(R.utils)
library(readxl)
library(cheddar)
sourceDirectory("R", modifiedOnly = FALSE)
sourceDirectory("../C1_method_v2/R", modifiedOnly = FALSE)
metadata <- read_excel("~/Google Drive/GitHub/C1_method_v2/data/parameter_values.xlsx")
fw_tol_loc <- metadata$dist_rej[metadata$foodweb == fw]
for(nsim_loc in 1:1000){
pred_mat <- ADBM_ABC_fw_all(fw_name = fw, fw_tol = fw_tol_loc, nsim = nsim_loc)
pred_mat_ADBM <- pred_mat$ADBM_pred_mat
comm_ADBM <- mat.to.comm(pred.mat = pred_mat_ADBM, fw_title = fw)
prop_basal_ADBM <- FractionBasalNodes(comm_ADBM)
prop_basal_ADBM_all <- c(prop_basal_ADBM_all, prop_basal_ADBM)
}
return(prop_basal_ADBM_all)
}
xx <- prop_basal_ADBM_fun(foodweb = "Benguela Pelagic")
# 2022.11.28
# Calculate proportion of basal species
prop_basal_ADBM_fun <- function(foodweb){
fw <- foodweb
prop_basal_ADBM_all <- c()
library(R.utils)
library(readxl)
library(cheddar)
sourceDirectory("R", modifiedOnly = FALSE)
sourceDirectory("../C1_method_v2/R", modifiedOnly = FALSE)
metadata <- read_excel("~/Google Drive/GitHub/C1_method_v2/data/parameter_values.xlsx")
fw_tol_loc <- metadata$dist_rej[metadata$foodweb == fw]
for(nsim_loc in 1:1000){
print(nsim_loc)
pred_mat <- ADBM_ABC_fw_all(fw_name = fw, fw_tol = fw_tol_loc, nsim = nsim_loc)
pred_mat_ADBM <- pred_mat$ADBM_pred_mat
comm_ADBM <- mat.to.comm(pred.mat = pred_mat_ADBM, fw_title = fw)
prop_basal_ADBM <- FractionBasalNodes(comm_ADBM)
prop_basal_ADBM_all <- c(prop_basal_ADBM_all, prop_basal_ADBM)
}
return(prop_basal_ADBM_all)
}
xx <- prop_basal_ADBM_fun("Benguela Pelagic")
xx
hist(xx)
xy <- readRDS("../C1_method_v2/results/rejection/Benguela Pelagic/rN=1000_tol=0.6_TSS_lower_a/Benguela Pelagic_prop.RDS")
xy <- xy$prop$prop_basal
plot(xx, xy)
mean(xx)
mean(xy)
pred_mat <- ADBM_ABC_fw_all(fw_name = fw, fw_tol = fw_tol_loc, nsim = 991)
pred_mat_ADBM <- pred_mat$ADBM_pred_mat
comm_ADBM <- mat.to.comm(pred.mat = pred_mat_ADBM, fw_title = fw)
show_fw(pred_mat_ADBM)
PlotWebByLevel(comm_ADBM)
IsBasalNode(comm_ADBM)
FractionBasalNodes(comm_ADBM)
x <- matrix(0, nrow = 5, ncol = 3)
dim(x)
dim(x)[1]
library(tictoc)
tic(); for (i in 1:1e9) {x=10}; toc()
citr:::insert_citation()
citr:::insert_citation()
wordcountaddin:::text_stats()
